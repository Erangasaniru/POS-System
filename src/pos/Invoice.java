/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pos;

import java.awt.Color;
import java.awt.Font;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.Vector;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author acer
 */
public class Invoice extends javax.swing.JPanel {

    /**
     * Creates new form Invoice
     */
    public Invoice() {
        initComponents();
        Color white = new Color(255,255,255);
        InvoiceTable.setBackground(white);
        InvoiceTable.setGridColor(white);
        InvoiceTable.getTableHeader().setFont(new Font("Segoe UI",Font.BOLD,20));
        InvoiceTable.getTableHeader().setOpaque(false);
        InvoiceTable.getTableHeader().setReorderingAllowed(false);
        InvoiceTable.getTableHeader().setBackground(white);
        InvoiceTable.getTableHeader().setForeground(new Color(0,0,0));
        InvoiceTable.setRowHeight(40);
        createStateList();
        loadTable();
    }
    
    public void createStateList(){
        Vector v =new Vector();
        v.add("Select");
        v.add("Paid");
        v.add("Paid Width Discount");
        v.add("Unpaid");
        DefaultComboBoxModel combo = new DefaultComboBoxModel(v);
        StateList.setModel(combo);
    
    }
    public static boolean isNumeric(String Str){
        return Str.matches("-?\\d+(\\.\\d+)?");
    }
    public void loadTable(){
        try{
            DefaultTableModel table =(DefaultTableModel) InvoiceTable.getModel();
            Statement st= (Statement) DBConnector.DBCon().createStatement();
            ResultSet result=st.executeQuery("select * from sales");
            table.setRowCount(0);
            while(result.next()){
                Vector v=new Vector();
                v.add(result.getString("SaleID"));
                v.add(result.getString("InvoiceID"));
                v.add(result.getString("CusID"));
                v.add(result.getString("CustomerName"));
                v.add(result.getString("TotalQuntity"));
                v.add(result.getString("TotalPrice"));
                v.add(result.getString("Status"));
                v.add(result.getString("Balance"));
                table.addRow(v);
            }
        }
        catch(Exception ex){
            System.out.println("Error"+ex);
        }
    }
    
     public void SearchInvoice(){
        String id=INID.getText();
        String name=CusName.getText();
        String State=StateList.getSelectedItem().toString();
        if(!StateList.getSelectedItem().toString().equals("Select")){
            if(isNumeric(INID.getText())){
        try{
            DefaultTableModel table =(DefaultTableModel) InvoiceTable.getModel();
            Statement st= (Statement) DBConnector.DBCon().createStatement();
            ResultSet result=st.executeQuery("select * from sales where InvoiceID Like '%"+id+"%' AND CustomerName Like '%"+name+"%' AND Status ='"+State+"' ");
            table.setRowCount(0);
            while(result.next()){
                Vector v=new Vector();
                v.add(result.getString("SaleID"));
                v.add(result.getString("InvoiceID"));
                v.add(result.getString("CusID"));
                v.add(result.getString("CustomerName"));
                v.add(result.getString("TotalQuntity"));
                v.add(result.getString("TotalPrice"));
                v.add(result.getString("Status"));
                v.add(result.getString("Balance"));
                table.addRow(v);
            }
        }
        catch(Exception ex){
            System.out.println("Error"+ex);
        }}
            else{
                if(!INID.getText().isEmpty()){
                    JOptionPane.showMessageDialog(null, "You must enter valid info");
                }
            } 
        }
        else{
            JOptionPane.showMessageDialog(null, "You must Select a State");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        InvoiceTable = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        INID = new javax.swing.JTextField();
        CusName = new javax.swing.JTextField();
        StateList = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(0, 153, 153));

        InvoiceTable.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        InvoiceTable.setForeground(new java.awt.Color(0, 153, 153));
        InvoiceTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "SaleID", "InvoiceID", "CustomerID", "Customer Name", "Total Quntity", "Total Price", "Status", "Balance"
            }
        ));
        InvoiceTable.setRowHeight(25);
        InvoiceTable.setShowHorizontalLines(false);
        InvoiceTable.setShowVerticalLines(false);
        jScrollPane1.setViewportView(InvoiceTable);

        jPanel1.setBackground(new java.awt.Color(51, 51, 51));

        jButton1.setBackground(new java.awt.Color(255, 255, 255));
        jButton1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton1.setText("Refresh");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        INID.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        INID.setForeground(new java.awt.Color(0, 153, 153));
        INID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                INIDKeyReleased(evt);
            }
        });

        CusName.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        CusName.setForeground(new java.awt.Color(0, 153, 153));
        CusName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                CusNameKeyReleased(evt);
            }
        });

        StateList.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        StateList.setForeground(new java.awt.Color(0, 153, 153));
        StateList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StateListActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Status");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Customer Name");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Invoice ID");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(INID, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(CusName, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 126, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(StateList, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 146, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(29, 29, 29))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(StateList, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(CusName)
                    .addComponent(INID))
                .addContainerGap(29, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 459, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void INIDKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_INIDKeyReleased
        SearchInvoice();
    }//GEN-LAST:event_INIDKeyReleased

    private void CusNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_CusNameKeyReleased
        SearchInvoice();
    }//GEN-LAST:event_CusNameKeyReleased

    private void StateListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StateListActionPerformed
        if(StateList.getSelectedItem().toString().equals("Select")){
            loadTable();
        }
        else{
            SearchInvoice();
        }
    }//GEN-LAST:event_StateListActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        loadTable();
        INID.setText(null);
        CusName.setText(null);
        StateList.setSelectedItem("Select");
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField CusName;
    private javax.swing.JTextField INID;
    private javax.swing.JTable InvoiceTable;
    private javax.swing.JComboBox<String> StateList;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
